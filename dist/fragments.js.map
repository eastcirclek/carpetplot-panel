{"version":3,"sources":["../src/fragments.js"],"names":["moment","TWENTYFOUR","TWELVE","SIX","fragments","getBucketIndex","time","from","diff","getBucketTimestamp","timestamp","utc","startOf","valueOf","nextTime","add","timeUtc","hours","Math","floor","hour","fragmentsMap","name","value","getFragment","fragmentType"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAOA,Y;;;AAEDC,gB,GAAa,Y;AACbC,Y,GAAS,Q;AACTC,S,GAAM,K;AAENC,e,iDACHH,U,EAAa;AACZ;AACA;AACAI,wBAAgB,wBAACC,IAAD,EAAOC,IAAP;AAAA,iBAAgBD,KAAKE,IAAL,CAAUD,IAAV,EAAgB,OAAhB,IAAyB,EAAzC;AAAA,SAHJ;AAIZE,4BAAoB,4BAACC,SAAD;AAAA,iBAAeV,OAAOW,GAAP,CAAWD,SAAX,EAAsBE,OAAtB,CAA8B,KAA9B,EAAqCC,OAArC,EAAf;AAAA,SAJR;AAKZC,kBAAU,kBAACR,IAAD;AAAA,iBAAUN,OAAOW,GAAP,CAAWL,IAAX,EAAiBS,GAAjB,CAAqB,EAArB,EAAyB,MAAzB,CAAV;AAAA;AALE,O,+BAObb,M,EAAS;AACR;AACA;AACAG,wBAAgB,wBAACC,IAAD,EAAOC,IAAP;AAAA,iBAAgBD,KAAKE,IAAL,CAAUD,IAAV,EAAgB,OAAhB,IAAyB,EAAzC;AAAA,SAHR;AAIRE,4BAAoB,4BAACC,SAAD,EAAe;AACjC,cAAMM,UAAUhB,OAAOW,GAAP,CAAWD,SAAX,CAAhB;AACA,cAAMO,QAAQC,KAAKC,KAAL,CAAWH,QAAQI,IAAR,KAAiB,EAA5B,IAAkC,EAAhD;AACA,iBAAOJ,QAAQJ,OAAR,CAAgB,KAAhB,EAAuBG,GAAvB,CAA2BE,KAA3B,EAAkC,MAAlC,EAA0CJ,OAA1C,EAAP;AACD,SARO;AASRC,kBAAU,kBAACR,IAAD;AAAA,iBAAUN,OAAOW,GAAP,CAAWL,IAAX,EAAiBS,GAAjB,CAAqB,EAArB,EAAyB,MAAzB,CAAV;AAAA;AATF,O,+BAWTZ,G,EAAM;AACL;AACA;AACAE,wBAAgB,wBAACC,IAAD,EAAOC,IAAP;AAAA,iBAAgBD,KAAKE,IAAL,CAAUD,IAAV,EAAgB,OAAhB,IAAyB,CAAzC;AAAA,SAHX;AAILE,4BAAoB,4BAACC,SAAD,EAAe;AACjC,cAAMM,UAAUhB,OAAOW,GAAP,CAAWD,SAAX,CAAhB;AACA,cAAMO,QAAQC,KAAKC,KAAL,CAAWH,QAAQI,IAAR,KAAiB,CAA5B,IAAiC,CAA/C;AACA,iBAAOJ,QAAQJ,OAAR,CAAgB,KAAhB,EAAuBG,GAAvB,CAA2BE,KAA3B,EAAkC,MAAlC,EAA0CJ,OAA1C,EAAP;AACD,SARI;AASLC,kBAAU,kBAACR,IAAD;AAAA,iBAAUN,OAAOW,GAAP,CAAWL,IAAX,EAAiBS,GAAjB,CAAqB,CAArB,EAAwB,MAAxB,CAAV;AAAA;AATL,O;;8BAaIM,Y,GAAe,CAC1B,EAAEC,MAAM,KAAR,EAAeC,OAAOtB,UAAtB,EAD0B,EAE1B,EAAEqB,MAAM,UAAR,EAAoBC,OAAOrB,MAA3B,EAF0B,EAG1B,EAAEoB,MAAM,SAAR,EAAmBC,OAAOpB,GAA1B,EAH0B,C;;;;6BAMfqB,W,GAAc,SAAdA,WAAc,CAACC,YAAD;AAAA,eAAkBrB,UAAUqB,YAAV,CAAlB;AAAA,O;;;;yBAEZ;AACbxB,8BADa;AAEbC,sBAFa;AAGbC;AAHa,O","file":"fragments.js","sourcesContent":["import moment from 'moment';\n\nconst TWENTYFOUR = 'TWENTYFOUR';\nconst TWELVE = 'TWELVE';\nconst SIX = 'SIX';\n\nconst fragments = {\n  [TWENTYFOUR]: {\n    // getBucketIndex: (time) => time.hour() * 60 + time.minute(),\n    // getTime: (time, bucketIndex) => moment(time).startOf('day').add(bucketIndex, 'minute'),\n    getBucketIndex: (time, from) => time.diff(from, 'hours')/24,\n    getBucketTimestamp: (timestamp) => moment.utc(timestamp).startOf('day').valueOf(),\n    nextTime: (time) => moment.utc(time).add(24, 'hour')\n  },\n  [TWELVE]: {\n    // getBucketIndex: (time) => time.hour() * 4 + Math.floor(time.minute() / 15),\n    // getTime: (time, bucketIndex) => moment(time).startOf('day').add(15 * bucketIndex, 'minute'),\n    getBucketIndex: (time, from) => time.diff(from, 'hours')/12,\n    getBucketTimestamp: (timestamp) => {\n      const timeUtc = moment.utc(timestamp);\n      const hours = Math.floor(timeUtc.hour() / 12) * 12;\n      return timeUtc.startOf('day').add(hours, 'hour').valueOf();\n    },\n    nextTime: (time) => moment.utc(time).add(12, 'hour')\n  },\n  [SIX]: {\n    // getBucketIndex: (time) => time.hour(),\n    // getTime: (time, bucketIndex) => moment(time).startOf('day').add(bucketIndex, 'hour'),\n    getBucketIndex: (time, from) => time.diff(from, 'hours')/6,\n    getBucketTimestamp: (timestamp) => {\n      const timeUtc = moment.utc(timestamp);\n      const hours = Math.floor(timeUtc.hour() / 6) * 6;\n      return timeUtc.startOf('day').add(hours, 'hour').valueOf();\n    },\n    nextTime: (time) => moment.utc(time).add(6, 'hour')\n  }\n};\n\nexport const fragmentsMap = [\n  { name: 'Day', value: TWENTYFOUR},\n  { name: '12 hours', value: TWELVE },\n  { name: '6 hours', value: SIX}\n];\n\nexport const getFragment = (fragmentType) => fragments[fragmentType];\n\nexport default {\n  TWENTYFOUR,\n  TWELVE,\n  SIX\n};"]}